import dependancies.Config
import dependancies.Deps

buildscript {
    ext.kotlin_version = '1.3.61'

    repositories {
        google()
        jcenter()
        gradlePluginPortal()
    }

    dependencies {
        classpath Deps.Tools.androidStudio
        classpath Deps.Tools.kotlinGradle
        classpath Deps.Tools.gradleVersions
        classpath Deps.Tools.jacocoCore
        classpath Deps.Tools.dicemelonJacoco
        classpath Deps.Tools.jacocoPalantir
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            apply plugin: "com.github.ben-manes.versions"

            //<editor-fold desc="android common DSL">
            android {
                buildToolsVersion Config.buildToolsVersion
                compileSdkVersion Config.compileSdkVersion

                defaultConfig {
                    minSdkVersion Config.minSdkVersion
                    targetSdkVersion Config.compileSdkVersion

                    testInstrumentationRunner "com.skeleton.testUtil.SkeletonJUnitRunner"
                }

                compileOptions {
                    sourceCompatibility Config.javaVersion
                    targetCompatibility Config.javaVersion
                }

                signingConfigs {
                    release {
                        storeFile file(String.valueOf(System.getenv("UPLOAD_KEY_PATH")))
                        storePassword System.getenv("UPLOAD_KEY_PASSWORD")
                        keyAlias System.getenv("UPLOAD_KEY")
                        keyPassword System.getenv("UPLOAD_KEY_PASSWORD")
                    }
                }

                buildTypes {
                    debug {
                        testCoverageEnabled true
                        debuggable true
                        minifyEnabled false
                    }
                    qa {
                        minifyEnabled true
                        debuggable false
                        signingConfig = signingConfigs.release
                    }
                    release {
                        testCoverageEnabled false
                        minifyEnabled true
                        debuggable false
                        signingConfig = signingConfigs.release
                    }
                }

                dataBinding {
                    enabled = true
                    enabledForTests = true
                }

                kotlin {
                    experimental {
                        coroutines "enable"
                    }
                }

                testOptions {
                    unitTests.returnDefaultValues = true
                    animationsDisabled = true
                }
            }

            kapt {
                correctErrorTypes = true
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
